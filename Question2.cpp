/*
Question:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be
:1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

Algorthm:
In mathematics, the Fibonacci numbers or Fibonacci series or Fibonacci sequence are the numbers in the following integer sequence:
 0,1,1,2,3,5,8,13... 
 
 fabonaci =  first number + second number
 
 1. count the fabonaci:
 
	int control = 34;
	while ( z < control)
	Fabonaci = term1 + term2;
		term1 = term2;
		term2 = Fabonaci ;
		
		 
2. count all number fabonacci is even and sum all of that:

	if (Fabonaci%2 == 0)
					{
						
						cout << Fabonaci <<endl;
						sum+=Fabonaci;
						cout << endl;
		
					}
					
					
					note#: the result even number on fabonacci must not exceed four million


Source Code:
*/


# include <iostream>
using namespace std;
int main ()
{
	int Fabonaci=0;
	int term1 = 0;
	int term2 = 1;
	int z = 0;
	int control = 34 ;
	int sum = 0;
	while ( z < control )
	{	
		

		Fabonaci = term1 + term2;
		term1 = term2;
		term2 = Fabonaci ;

		 
				//cout << Fabonaci << endl;
				
				if (Fabonaci%2 == 0)
					{
						
						cout << Fabonaci <<endl;
						sum+=Fabonaci;
						cout << endl;
		
					}
			

		z++;

	
	
	}

	cout << "Result Fabonaci "<<"= "<< sum << endl;
	return 0;

}

